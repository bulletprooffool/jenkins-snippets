import requests
import sys


def create_attachment(confluence_url, page_title, space_key, parent_page_title, html_file_path, username, password):
    # Get the page ID of the parent page
    parent_page_id = get_page_id(confluence_url, parent_page_title, space_key, username, password)
    if not parent_page_id:
        print("Parent page '{}' not found in space '{}'.".format(parent_page_title, space_key))
        return
    
    # Create the URL for uploading attachments
    upload_url = "{}/rest/api/content/{}/child/attachment".format(confluence_url, parent_page_id)

    # Read the HTML file content
    with open(html_file_path, 'r') as file:
        html_content = file.read()

    # Prepare the attachment data
    attachment_data = {
        'file': open(html_file_path, 'rb'),
        'comment': 'HTML Attachment',
        'minorEdit': True
    }

    # Upload the attachment
    response = requests.post(upload_url, auth=(username, password), files=attachment_data)

    if response.status_code == 200:
        attachment_id = response.json()['results'][0]['id']
        attachment_link = "{}/download/attachments/{}/{}/{}.html".format(confluence_url, parent_page_id, attachment_id, page_title)
        print("Attachment uploaded successfully. Link: {}".format(attachment_link))
    else:
        print("Error uploading attachment: {}".format(response.status_code))


def get_page_id(confluence_url, page_title, space_key, username, password):
    # Create the URL for searching pages
    search_url = "{}/rest/api/content?spaceKey={}&title={}&expand=version".format(confluence_url, space_key, page_title)

    # Search for the page
    response = requests.get(search_url, auth=(username, password))

    if response.status_code == 200:
        results = response.json()['results']
        if results:
            return results[0]['id']
    else:
        print("Error searching for page: {}".format(response.status_code))

    return None


if __name__ == '__main__':
    if len(sys.argv) != 8:
        print("Usage: python script_name.py confluence_url page_title space_key parent_page_title html_file_path username password")
    else:
        confluence_url = sys.argv[1]
        page_title = sys.argv[2]
        space_key = sys.argv[3]
        parent_page_title = sys.argv[4]
        html_file_path = sys.argv[5]
        username = sys.argv[6]
        password = sys.argv[7]

        create_attachment(confluence_url, page_title, space_key, parent_page_title, html_file_path, username, password)
